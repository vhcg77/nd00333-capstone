{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Hyperparameter Tuning using HyperDrive\n",
        "\n",
        "TODO: Import Dependencies. In the cell below, import all the dependencies that you will need to complete the project."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core import Workspace, Experiment\n",
        "from azureml.widgets import RunDetails\n",
        "from azureml.train.sklearn import SKLearn\n",
        "from azureml.train.hyperdrive.run import PrimaryMetricGoal\n",
        "from azureml.train.hyperdrive.policy import BanditPolicy\n",
        "from azureml.train.hyperdrive.sampling import RandomParameterSampling\n",
        "from azureml.train.hyperdrive.runconfig import HyperDriveConfig\n",
        "from azureml.train.hyperdrive.parameter_expressions import uniform, choice\n",
        "from azureml.train.hyperdrive.parameter_expressions import choice, loguniform, uniform\n",
        "from azureml.core.dataset import Dataset\n",
        "import os\n"
      ],
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "gather": {
          "logged": 1635114492930
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dataset\n",
        "\n",
        "TODO: Get data. In the cell below, write code to access the data you will be using in this project. Remember that the dataset needs to be external.\n",
        "\n",
        "This dataset contains numerical input variables that come from and PCA algorithm. Due to confidential concerns, the original variables are not available. Features V1, V2, ..., V8 are the outputs of the principal components from the PCA algorithm. The time and amount are the variables that are not transformed by PCA. The target variable is the feature 'Class' and it takes values 1 in case of fraud and 0 otherwise.\n",
        "\n",
        "\n",
        "This dataset contains transations made by credit cards in September 2012 by European cardholders. This dataset contains 492 frauds out of 284807 transations, and it is highly unbalanced, the positive class (fraud) account for 0.172% of all the transations.\n"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "ws = Workspace.from_config()\n",
        "\n",
        "# choose a name for experiment\n",
        "experiment_name = 'telco-customer-churn'\n",
        "experiment=Experiment(ws, experiment_name)\n",
        "\n",
        "# Try to load the dataset from the Workspace. Otherwise, create it from the file\n",
        "# NOTE: update the key to match the dataset name\n",
        "found = False\n",
        "key = \"Customer Churn\"\n",
        "description_text = \"Customer Churn DataSet for Udacity Capstone Project\"\n",
        "\n",
        "if key in ws.datasets.keys(): \n",
        "        found = True\n",
        "        dataset = ws.datasets[key] \n",
        "\n",
        "if not found:\n",
        "        # Create AML Dataset and register it into Workspace\n",
        "        example_data = 'https://raw.githubusercontent.com/srees1988/predict-churn-py/main/customer_churn_data.csv'\n",
        "        dataset = Dataset.Tabular.from_delimited_files(example_data)        \n",
        "        #Register Dataset in Workspace\n",
        "        dataset = dataset.register(workspace=ws,\n",
        "                                   name=key,\n",
        "                                   description=description_text)\n",
        "\n",
        "\n",
        "df = dataset.to_pandas_dataframe()\n",
        "df.describe()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 2,
          "data": {
            "text/plain": "       SeniorCitizen       tenure  MonthlyCharges  TotalCharges\ncount    7043.000000  7043.000000     7043.000000   7032.000000\nmean        0.162147    32.371149       64.761692   2283.300441\nstd         0.368612    24.559481       30.090047   2266.771362\nmin         0.000000     0.000000       18.250000     18.800000\n25%         0.000000     9.000000       35.500000    401.450000\n50%         0.000000    29.000000       70.350000   1397.475000\n75%         0.000000    55.000000       89.850000   3794.737500\nmax         1.000000    72.000000      118.750000   8684.800000",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SeniorCitizen</th>\n      <th>tenure</th>\n      <th>MonthlyCharges</th>\n      <th>TotalCharges</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>7043.000000</td>\n      <td>7043.000000</td>\n      <td>7043.000000</td>\n      <td>7032.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.162147</td>\n      <td>32.371149</td>\n      <td>64.761692</td>\n      <td>2283.300441</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.368612</td>\n      <td>24.559481</td>\n      <td>30.090047</td>\n      <td>2266.771362</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>18.250000</td>\n      <td>18.800000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.000000</td>\n      <td>9.000000</td>\n      <td>35.500000</td>\n      <td>401.450000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.000000</td>\n      <td>29.000000</td>\n      <td>70.350000</td>\n      <td>1397.475000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.000000</td>\n      <td>55.000000</td>\n      <td>89.850000</td>\n      <td>3794.737500</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>72.000000</td>\n      <td>118.750000</td>\n      <td>8684.800000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 2,
      "metadata": {
        "gather": {
          "logged": 1635114499644
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Cluster Provisioning"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.compute import ComputeTarget, AmlCompute\r\n",
        "from azureml.core.compute_target import ComputeTargetException\r\n",
        "\r\n",
        "# TODO: Create compute cluster\r\n",
        "# Use vm_size = \"Standard_D2_V2\" in your provisioning configuration.\r\n",
        "# max_nodes should be no greater than 4.\r\n",
        "\r\n",
        "\r\n",
        "cluster_name = \"cluster-vhcg\"\r\n",
        "# verify that the cluster does not exist already\r\n",
        "try:\r\n",
        "    cpu_cluster = ComputeTarget(workspace=ws, name = cluster_name)\r\n",
        "    print('Found existing cluster, use it.')\r\n",
        "except ComputeTargetException:\r\n",
        "    compute_config = AmlCompute.provisioning_configuration(vm_size='Standard_D2_V2', max_nodes = 4, idle_seconds_before_scaledown=120)\r\n",
        "    cpu_cluster = ComputeTarget.create(ws, cluster_name, compute_config)\r\n",
        "\r\n",
        "cpu_cluster.wait_for_completion(show_output=True)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Found existing cluster, use it.\nSucceeded\nAmlCompute wait for completion finished\n\nMinimum number of nodes requested have been provisioned\n"
        }
      ],
      "execution_count": 3,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1635114518525
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Hyperdrive Configuration\n",
        "\n",
        "TODO: Explain the model you are using and the reason for chosing the different hyperparameters, termination policy and config settings."
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598531923519
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.widgets import RunDetails\n",
        "from azureml.train.sklearn import SKLearn\n",
        "from azureml.train.hyperdrive.run import PrimaryMetricGoal\n",
        "from azureml.train.hyperdrive.policy import BanditPolicy\n",
        "from azureml.train.hyperdrive.sampling import RandomParameterSampling\n",
        "from azureml.train.hyperdrive.runconfig import HyperDriveConfig\n",
        "from azureml.train.hyperdrive.parameter_expressions import uniform, choice\n",
        "import os\n",
        "\n",
        "# Specify parameter sampler\n",
        "ps = RandomParameterSampling({\n",
        "    '--solver': choice('newton-cg', 'lbfgs', 'liblinear'),\n",
        "    #'--penalty': choice('none', 'l1', 'l2'),\n",
        "    '--C': choice(1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1, 10, 100),\n",
        "    '--max_iter': choice(100, 200, 300, 400, 500)\n",
        "})\n",
        "\n",
        "# Specify a Policy\n",
        "policy = BanditPolicy(slack_factor=0.1, evaluation_interval=2, delay_evaluation=10)\n",
        "\n",
        "if \"training\" not in os.listdir():\n",
        "    os.mkdir(\"./training\")\n",
        "\n",
        "# Create a SKLearn estimator for use with train.py\n",
        "est = SKLearn(source_directory='./', compute_target=cpu_cluster, entry_script='train.py')\n",
        "\n",
        "# Create a HyperDriveConfig using the estimator, hyperparameter sampler, and policy.\n",
        "hyperdrive_config = HyperDriveConfig( hyperparameter_sampling=ps, \n",
        "                                        primary_metric_name='Accuracy', \n",
        "                                        primary_metric_goal=PrimaryMetricGoal.MAXIMIZE, \n",
        "                                        max_total_runs=100, \n",
        "                                        max_concurrent_runs=4, \n",
        "                                        max_duration_minutes=10080, \n",
        "                                        policy=policy, \n",
        "                                        estimator=est)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "'SKLearn' estimator is deprecated. Please use 'ScriptRunConfig' from 'azureml.core.script_run_config' with your own defined environment or the AzureML-Tutorial curated environment.\n'enabled' is deprecated. Please use the azureml.core.runconfig.DockerConfiguration object with the 'use_docker' param instead.\n"
        }
      ],
      "execution_count": 4,
      "metadata": {
        "gather": {
          "logged": 1635114520405
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#TODO: Submit your experiment\n",
        "\n",
        "hyperdrive_run = experiment.submit(hyperdrive_config)\n"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "WARNING:root:If 'script' has been provided here and a script file name has been specified in 'run_config', 'script' provided in ScriptRunConfig initialization will take precedence.\n"
        }
      ],
      "execution_count": 5,
      "metadata": {
        "gather": {
          "logged": 1635114531970
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Run Details\n",
        "\n",
        "OPTIONAL: Write about the different models trained and their performance. Why do you think some models did better than others?\n",
        "\n",
        "TODO: In the cell below, use the `RunDetails` widget to show the different experiments."
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598544898497
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "RunDetails(hyperdrive_run).show()\n",
        "hyperdrive_run.wait_for_completion()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "_HyperDriveWidget(widget_settings={'childWidgetDisplay': 'popup', 'send_telemetry': False, 'log_level': 'INFO'…",
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "d96ad135e4b94e889ca280940b1c3dd5"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "application/aml.mini.widget.v1": "{\"status\": \"Running\", \"workbench_run_details_uri\": \"https://ml.azure.com/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e?wsid=/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourcegroups/aml-quickstarts-161907/workspaces/quick-starts-ws-161907&tid=660b3398-b80e-49d2-bc5b-ac1dc93b5254\", \"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"run_properties\": {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"created_utc\": \"2021-10-24T22:28:50.603866Z\", \"properties\": {\"primary_metric_config\": \"{\\\"name\\\": \\\"Accuracy\\\", \\\"goal\\\": \\\"maximize\\\"}\", \"resume_from\": \"null\", \"runTemplate\": \"HyperDrive\", \"azureml.runsource\": \"hyperdrive\", \"platform\": \"AML\", \"ContentSnapshotId\": \"bb65cb5e-3479-48e1-880c-e103cc15226c\", \"user_agent\": \"python/3.6.9 (Linux-5.4.0-1056-azure-x86_64-with-debian-buster-sid) msrest/0.6.21 Hyperdrive.Service/1.0.0 Hyperdrive.SDK/core.1.34.0\"}, \"tags\": {\"_aml_system_max_concurrent_jobs\": \"4\", \"max_concurrent_jobs\": \"4\", \"_aml_system_max_total_jobs\": \"100\", \"max_total_jobs\": \"100\", \"_aml_system_max_duration_minutes\": \"10080\", \"max_duration_minutes\": \"10080\", \"_aml_system_policy_config\": \"{\\\"name\\\": \\\"BANDIT\\\", \\\"properties\\\": {\\\"evaluation_interval\\\": 2, \\\"delay_evaluation\\\": 10, \\\"slack_factor\\\": 0.1}}\", \"policy_config\": \"{\\\"name\\\": \\\"BANDIT\\\", \\\"properties\\\": {\\\"evaluation_interval\\\": 2, \\\"delay_evaluation\\\": 10, \\\"slack_factor\\\": 0.1}}\", \"_aml_system_generator_config\": \"{\\\"name\\\": \\\"RANDOM\\\", \\\"parameter_space\\\": {\\\"--solver\\\": [\\\"choice\\\", [[\\\"newton-cg\\\", \\\"lbfgs\\\", \\\"liblinear\\\"]]], \\\"--C\\\": [\\\"choice\\\", [[1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 10, 100]]], \\\"--max_iter\\\": [\\\"choice\\\", [[100, 200, 300, 400, 500]]]}}\", \"generator_config\": \"{\\\"name\\\": \\\"RANDOM\\\", \\\"parameter_space\\\": {\\\"--solver\\\": [\\\"choice\\\", [[\\\"newton-cg\\\", \\\"lbfgs\\\", \\\"liblinear\\\"]]], \\\"--C\\\": [\\\"choice\\\", [[1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 10, 100]]], \\\"--max_iter\\\": [\\\"choice\\\", [[100, 200, 300, 400, 500]]]}}\", \"_aml_system_primary_metric_config\": \"{\\\"name\\\": \\\"Accuracy\\\", \\\"goal\\\": \\\"maximize\\\"}\", \"primary_metric_config\": \"{\\\"name\\\": \\\"Accuracy\\\", \\\"goal\\\": \\\"maximize\\\"}\", \"_aml_system_platform_config\": \"{\\\"ServiceAddress\\\": \\\"https://southcentralus.experiments.azureml.net\\\", \\\"ServiceArmScope\\\": \\\"subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/telco-customer-churn\\\", \\\"SubscriptionId\\\": \\\"9e65f93e-bdd8-437b-b1e8-0647cd6098f7\\\", \\\"ResourceGroupName\\\": \\\"aml-quickstarts-161907\\\", \\\"WorkspaceName\\\": \\\"quick-starts-ws-161907\\\", \\\"ExperimentName\\\": \\\"telco-customer-churn\\\", \\\"Definition\\\": {\\\"Overrides\\\": {\\\"script\\\": \\\"train.py\\\", \\\"arguments\\\": [], \\\"target\\\": \\\"cluster-vhcg\\\", \\\"framework\\\": \\\"Python\\\", \\\"communicator\\\": \\\"None\\\", \\\"maxRunDurationSeconds\\\": null, \\\"nodeCount\\\": 1, \\\"priority\\\": null, \\\"environment\\\": {\\\"name\\\": null, \\\"version\\\": null, \\\"environmentVariables\\\": {\\\"EXAMPLE_ENV_VAR\\\": \\\"EXAMPLE_VALUE\\\"}, \\\"python\\\": {\\\"userManagedDependencies\\\": true, \\\"interpreterPath\\\": \\\"python\\\", \\\"condaDependenciesFile\\\": null, \\\"baseCondaEnvironment\\\": null, \\\"condaDependencies\\\": {\\\"name\\\": \\\"project_environment\\\", \\\"dependencies\\\": [\\\"python=3.6.2\\\", {\\\"pip\\\": [\\\"azureml-defaults\\\"]}], \\\"channels\\\": [\\\"anaconda\\\", \\\"conda-forge\\\"]}}, \\\"docker\\\": {\\\"enabled\\\": true, \\\"baseImage\\\": \\\"sklearn:0.20.3-cpu\\\", \\\"baseDockerfile\\\": null, \\\"sharedVolumes\\\": true, \\\"shmSize\\\": \\\"2g\\\", \\\"arguments\\\": [], \\\"baseImageRegistry\\\": {\\\"address\\\": \\\"viennaprivate.azurecr.io\\\", \\\"username\\\": null, \\\"password\\\": null, \\\"registryIdentity\\\": null}, \\\"platform\\\": {\\\"os\\\": \\\"Linux\\\", \\\"architecture\\\": \\\"amd64\\\"}}, \\\"spark\\\": {\\\"repositories\\\": [], \\\"packages\\\": [], \\\"precachePackages\\\": false}, \\\"databricks\\\": {\\\"mavenLibraries\\\": [], \\\"pypiLibraries\\\": [], \\\"rcranLibraries\\\": [], \\\"jarLibraries\\\": [], \\\"eggLibraries\\\": []}, \\\"r\\\": null, \\\"inferencingStackVersion\\\": null}, \\\"history\\\": {\\\"outputCollection\\\": true, \\\"snapshotProject\\\": true, \\\"directoriesToWatch\\\": [\\\"logs\\\"]}, \\\"spark\\\": {\\\"configuration\\\": {\\\"spark.app.name\\\": \\\"Azure ML Experiment\\\", \\\"spark.yarn.maxAppAttempts\\\": 1}}, \\\"docker\\\": {\\\"useDocker\\\": false, \\\"sharedVolumes\\\": true, \\\"arguments\\\": [], \\\"shmSize\\\": \\\"2g\\\"}, \\\"hdi\\\": {\\\"yarnDeployMode\\\": \\\"cluster\\\"}, \\\"tensorflow\\\": {\\\"workerCount\\\": 1, \\\"parameterServerCount\\\": 1}, \\\"mpi\\\": {\\\"processCountPerNode\\\": 1, \\\"nodeCount\\\": 1}, \\\"pytorch\\\": {\\\"communicationBackend\\\": \\\"nccl\\\", \\\"processCount\\\": null, \\\"nodeCount\\\": 1}, \\\"paralleltask\\\": {\\\"maxRetriesPerWorker\\\": 0, \\\"workerCountPerNode\\\": 1, \\\"terminalExitCodes\\\": null}, \\\"dataReferences\\\": {}, \\\"data\\\": {}, \\\"outputData\\\": {}, \\\"sourceDirectoryDataStore\\\": null, \\\"amlcompute\\\": {\\\"vmSize\\\": null, \\\"vmPriority\\\": null, \\\"retainCluster\\\": false, \\\"name\\\": null, \\\"clusterMaxNodeCount\\\": 1}, \\\"credentialPassthrough\\\": false, \\\"command\\\": \\\"\\\", \\\"environmentVariables\\\": {}, \\\"applicationEndpoints\\\": {}}, \\\"TargetDetails\\\": null, \\\"SnapshotId\\\": \\\"bb65cb5e-3479-48e1-880c-e103cc15226c\\\", \\\"TelemetryValues\\\": {\\\"amlClientType\\\": \\\"azureml-sdk-train\\\", \\\"amlClientModule\\\": \\\"[Scrubbed]\\\", \\\"amlClientFunction\\\": \\\"[Scrubbed]\\\", \\\"tenantId\\\": \\\"660b3398-b80e-49d2-bc5b-ac1dc93b5254\\\", \\\"amlClientRequestId\\\": \\\"2d862b2b-a755-4286-b76d-9177c5087a0a\\\", \\\"amlClientSessionId\\\": \\\"051a7291-71e1-49f1-a00f-f472f817e105\\\", \\\"subscriptionId\\\": \\\"9e65f93e-bdd8-437b-b1e8-0647cd6098f7\\\", \\\"estimator\\\": \\\"SKLearn\\\", \\\"samplingMethod\\\": \\\"RANDOM\\\", \\\"terminationPolicy\\\": \\\"Bandit\\\", \\\"primaryMetricGoal\\\": \\\"maximize\\\", \\\"maxTotalRuns\\\": 100, \\\"maxConcurrentRuns\\\": 4, \\\"maxDurationMinutes\\\": 10080, \\\"vmSize\\\": null}}}\", \"platform_config\": \"{\\\"ServiceAddress\\\": \\\"https://southcentralus.experiments.azureml.net\\\", \\\"ServiceArmScope\\\": \\\"subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/telco-customer-churn\\\", \\\"SubscriptionId\\\": \\\"9e65f93e-bdd8-437b-b1e8-0647cd6098f7\\\", \\\"ResourceGroupName\\\": \\\"aml-quickstarts-161907\\\", \\\"WorkspaceName\\\": \\\"quick-starts-ws-161907\\\", \\\"ExperimentName\\\": \\\"telco-customer-churn\\\", \\\"Definition\\\": {\\\"Overrides\\\": {\\\"script\\\": \\\"train.py\\\", \\\"arguments\\\": [], \\\"target\\\": \\\"cluster-vhcg\\\", \\\"framework\\\": \\\"Python\\\", \\\"communicator\\\": \\\"None\\\", \\\"maxRunDurationSeconds\\\": null, \\\"nodeCount\\\": 1, \\\"priority\\\": null, \\\"environment\\\": {\\\"name\\\": null, \\\"version\\\": null, \\\"environmentVariables\\\": {\\\"EXAMPLE_ENV_VAR\\\": \\\"EXAMPLE_VALUE\\\"}, \\\"python\\\": {\\\"userManagedDependencies\\\": true, \\\"interpreterPath\\\": \\\"python\\\", \\\"condaDependenciesFile\\\": null, \\\"baseCondaEnvironment\\\": null, \\\"condaDependencies\\\": {\\\"name\\\": \\\"project_environment\\\", \\\"dependencies\\\": [\\\"python=3.6.2\\\", {\\\"pip\\\": [\\\"azureml-defaults\\\"]}], \\\"channels\\\": [\\\"anaconda\\\", \\\"conda-forge\\\"]}}, \\\"docker\\\": {\\\"enabled\\\": true, \\\"baseImage\\\": \\\"sklearn:0.20.3-cpu\\\", \\\"baseDockerfile\\\": null, \\\"sharedVolumes\\\": true, \\\"shmSize\\\": \\\"2g\\\", \\\"arguments\\\": [], \\\"baseImageRegistry\\\": {\\\"address\\\": \\\"viennaprivate.azurecr.io\\\", \\\"username\\\": null, \\\"password\\\": null, \\\"registryIdentity\\\": null}, \\\"platform\\\": {\\\"os\\\": \\\"Linux\\\", \\\"architecture\\\": \\\"amd64\\\"}}, \\\"spark\\\": {\\\"repositories\\\": [], \\\"packages\\\": [], \\\"precachePackages\\\": false}, \\\"databricks\\\": {\\\"mavenLibraries\\\": [], \\\"pypiLibraries\\\": [], \\\"rcranLibraries\\\": [], \\\"jarLibraries\\\": [], \\\"eggLibraries\\\": []}, \\\"r\\\": null, \\\"inferencingStackVersion\\\": null}, \\\"history\\\": {\\\"outputCollection\\\": true, \\\"snapshotProject\\\": true, \\\"directoriesToWatch\\\": [\\\"logs\\\"]}, \\\"spark\\\": {\\\"configuration\\\": {\\\"spark.app.name\\\": \\\"Azure ML Experiment\\\", \\\"spark.yarn.maxAppAttempts\\\": 1}}, \\\"docker\\\": {\\\"useDocker\\\": false, \\\"sharedVolumes\\\": true, \\\"arguments\\\": [], \\\"shmSize\\\": \\\"2g\\\"}, \\\"hdi\\\": {\\\"yarnDeployMode\\\": \\\"cluster\\\"}, \\\"tensorflow\\\": {\\\"workerCount\\\": 1, \\\"parameterServerCount\\\": 1}, \\\"mpi\\\": {\\\"processCountPerNode\\\": 1, \\\"nodeCount\\\": 1}, \\\"pytorch\\\": {\\\"communicationBackend\\\": \\\"nccl\\\", \\\"processCount\\\": null, \\\"nodeCount\\\": 1}, \\\"paralleltask\\\": {\\\"maxRetriesPerWorker\\\": 0, \\\"workerCountPerNode\\\": 1, \\\"terminalExitCodes\\\": null}, \\\"dataReferences\\\": {}, \\\"data\\\": {}, \\\"outputData\\\": {}, \\\"sourceDirectoryDataStore\\\": null, \\\"amlcompute\\\": {\\\"vmSize\\\": null, \\\"vmPriority\\\": null, \\\"retainCluster\\\": false, \\\"name\\\": null, \\\"clusterMaxNodeCount\\\": 1}, \\\"credentialPassthrough\\\": false, \\\"command\\\": \\\"\\\", \\\"environmentVariables\\\": {}, \\\"applicationEndpoints\\\": {}}, \\\"TargetDetails\\\": null, \\\"SnapshotId\\\": \\\"bb65cb5e-3479-48e1-880c-e103cc15226c\\\", \\\"TelemetryValues\\\": {\\\"amlClientType\\\": \\\"azureml-sdk-train\\\", \\\"amlClientModule\\\": \\\"[Scrubbed]\\\", \\\"amlClientFunction\\\": \\\"[Scrubbed]\\\", \\\"tenantId\\\": \\\"660b3398-b80e-49d2-bc5b-ac1dc93b5254\\\", \\\"amlClientRequestId\\\": \\\"2d862b2b-a755-4286-b76d-9177c5087a0a\\\", \\\"amlClientSessionId\\\": \\\"051a7291-71e1-49f1-a00f-f472f817e105\\\", \\\"subscriptionId\\\": \\\"9e65f93e-bdd8-437b-b1e8-0647cd6098f7\\\", \\\"estimator\\\": \\\"SKLearn\\\", \\\"samplingMethod\\\": \\\"RANDOM\\\", \\\"terminationPolicy\\\": \\\"Bandit\\\", \\\"primaryMetricGoal\\\": \\\"maximize\\\", \\\"maxTotalRuns\\\": 100, \\\"maxConcurrentRuns\\\": 4, \\\"maxDurationMinutes\\\": 10080, \\\"vmSize\\\": null}}}\", \"_aml_system_resume_child_runs\": \"null\", \"resume_child_runs\": \"null\", \"_aml_system_all_jobs_generated\": \"true\", \"all_jobs_generated\": \"true\", \"_aml_system_cancellation_requested\": \"true\", \"cancellation_requested\": \"true\", \"_aml_system_progress_metadata_evaluation_timestamp\": \"\\\"2021-10-24T22:28:51.329681\\\"\", \"progress_metadata_evaluation_timestamp\": \"\\\"2021-10-24T22:28:51.329681\\\"\", \"_aml_system_progress_metadata_digest\": \"\\\"bd060b1ee337692a337b26297e12a49c544d97d21d934404426944c4b30ed279\\\"\", \"progress_metadata_digest\": \"\\\"bd060b1ee337692a337b26297e12a49c544d97d21d934404426944c4b30ed279\\\"\", \"_aml_system_progress_metadata_active_timestamp\": \"\\\"2021-10-24T22:28:51.329681\\\"\", \"progress_metadata_active_timestamp\": \"\\\"2021-10-24T22:28:51.329681\\\"\", \"_aml_system_optimizer_state_artifact\": \"null\", \"_aml_system_outdated_optimizer_state_artifacts\": \"\\\"[]\\\"\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_0\": \"{\\\"--C\\\": 0.0001, \\\"--max_iter\\\": 500, \\\"--solver\\\": \\\"newton-cg\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_1\": \"{\\\"--C\\\": 1, \\\"--max_iter\\\": 200, \\\"--solver\\\": \\\"newton-cg\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_2\": \"{\\\"--C\\\": 1e-05, \\\"--max_iter\\\": 400, \\\"--solver\\\": \\\"liblinear\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_3\": \"{\\\"--C\\\": 10, \\\"--max_iter\\\": 400, \\\"--solver\\\": \\\"newton-cg\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_4\": \"{\\\"--C\\\": 1, \\\"--max_iter\\\": 400, \\\"--solver\\\": \\\"liblinear\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_5\": \"{\\\"--C\\\": 10, \\\"--max_iter\\\": 300, \\\"--solver\\\": \\\"lbfgs\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_6\": \"{\\\"--C\\\": 1e-05, \\\"--max_iter\\\": 200, \\\"--solver\\\": \\\"liblinear\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_7\": \"{\\\"--C\\\": 0.001, \\\"--max_iter\\\": 100, \\\"--solver\\\": \\\"lbfgs\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_8\": \"{\\\"--C\\\": 100, \\\"--max_iter\\\": 500, \\\"--solver\\\": \\\"newton-cg\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_9\": \"{\\\"--C\\\": 0.0001, \\\"--max_iter\\\": 200, \\\"--solver\\\": \\\"newton-cg\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_10\": \"{\\\"--C\\\": 0.01, \\\"--max_iter\\\": 300, \\\"--solver\\\": \\\"liblinear\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_11\": \"{\\\"--C\\\": 0.1, \\\"--max_iter\\\": 400, \\\"--solver\\\": \\\"lbfgs\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_12\": \"{\\\"--C\\\": 0.0001, \\\"--max_iter\\\": 100, \\\"--solver\\\": \\\"liblinear\\\"}\", \"_aml_system_HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_13\": \"{\\\"--C\\\": 100, \\\"--max_iter\\\": 300, \\\"--solver\\\": \\\"newton-cg\\\"}\"}, \"end_time_utc\": null, \"status\": \"Running\", \"log_files\": {\"azureml-logs/hyperdrive.txt\": \"https://mlstrg161907.blob.core.windows.net/azureml/ExperimentRun/dcid.HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e/azureml-logs/hyperdrive.txt?sv=2019-07-07&sr=b&sig=cS%2Fo7WXp4qhwbzS1qiC21%2F8k5oQX6QFRcpFUYgiQ6k0%3D&skoid=ad12d264-dc6c-4821-8af0-19dccd17583f&sktid=660b3398-b80e-49d2-bc5b-ac1dc93b5254&skt=2021-10-24T20%3A08%3A36Z&ske=2021-10-26T04%3A18%3A36Z&sks=b&skv=2019-07-07&st=2021-10-24T22%3A27%3A03Z&se=2021-10-25T06%3A37%3A03Z&sp=r\"}, \"log_groups\": [[\"azureml-logs/hyperdrive.txt\"]], \"run_duration\": \"0:09:03\", \"run_number\": \"67\", \"run_queued_details\": {\"status\": \"Running\", \"details\": null}, \"hyper_parameters\": {\"--solver\": [\"choice\", [[\"newton-cg\", \"lbfgs\", \"liblinear\"]]], \"--C\": [\"choice\", [[1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 10, 100]]], \"--max_iter\": [\"choice\", [[100, 200, 300, 400, 500]]]}}, \"child_runs\": [{\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_0\", \"run_number\": 68, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:32:56.751117Z\", \"end_time\": \"2021-10-24T22:35:17.892953Z\", \"created_time\": \"2021-10-24T22:29:21.672541Z\", \"created_time_dt\": \"2021-10-24T22:29:21.672541Z\", \"duration\": \"0:05:56\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 0.0001, \"param_--max_iter\": 500, \"param_--solver\": \"newton-cg\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_3\", \"run_number\": 71, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:32:44.321502Z\", \"end_time\": \"2021-10-24T22:33:38.088975Z\", \"created_time\": \"2021-10-24T22:29:21.860155Z\", \"created_time_dt\": \"2021-10-24T22:29:21.860155Z\", \"duration\": \"0:04:16\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 10, \"param_--max_iter\": 400, \"param_--solver\": \"newton-cg\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_2\", \"run_number\": 69, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:32:43.922097Z\", \"end_time\": \"2021-10-24T22:33:38.538849Z\", \"created_time\": \"2021-10-24T22:29:21.7412Z\", \"created_time_dt\": \"2021-10-24T22:29:21.7412Z\", \"duration\": \"0:04:16\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 1e-05, \"param_--max_iter\": 400, \"param_--solver\": \"liblinear\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_1\", \"run_number\": 70, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:32:49.872654Z\", \"end_time\": \"2021-10-24T22:33:39.260195Z\", \"created_time\": \"2021-10-24T22:29:21.767267Z\", \"created_time_dt\": \"2021-10-24T22:29:21.767267Z\", \"duration\": \"0:04:17\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 1, \"param_--max_iter\": 200, \"param_--solver\": \"newton-cg\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_4\", \"run_number\": 74, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:34:31.715509Z\", \"end_time\": \"2021-10-24T22:35:14.372249Z\", \"created_time\": \"2021-10-24T22:34:25.398645Z\", \"created_time_dt\": \"2021-10-24T22:34:25.398645Z\", \"duration\": \"0:00:48\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 1, \"param_--max_iter\": 400, \"param_--solver\": \"liblinear\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_5\", \"run_number\": 72, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:34:31.568344Z\", \"end_time\": \"2021-10-24T22:34:54.641641Z\", \"created_time\": \"2021-10-24T22:34:25.012893Z\", \"created_time_dt\": \"2021-10-24T22:34:25.012893Z\", \"duration\": \"0:00:29\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 10, \"param_--max_iter\": 300, \"param_--solver\": \"lbfgs\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_6\", \"run_number\": 73, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:34:30.640963Z\", \"end_time\": \"2021-10-24T22:34:54.365074Z\", \"created_time\": \"2021-10-24T22:34:25.014284Z\", \"created_time_dt\": \"2021-10-24T22:34:25.014284Z\", \"duration\": \"0:00:29\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 1e-05, \"param_--max_iter\": 200, \"param_--solver\": \"liblinear\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_8\", \"run_number\": 75, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:35:34.059426Z\", \"end_time\": \"2021-10-24T22:35:59.181779Z\", \"created_time\": \"2021-10-24T22:35:26.657712Z\", \"created_time_dt\": \"2021-10-24T22:35:26.657712Z\", \"duration\": \"0:00:32\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 100, \"param_--max_iter\": 500, \"param_--solver\": \"newton-cg\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_7\", \"run_number\": 76, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:35:34.005702Z\", \"end_time\": \"2021-10-24T22:35:57.904875Z\", \"created_time\": \"2021-10-24T22:35:27.291005Z\", \"created_time_dt\": \"2021-10-24T22:35:27.291005Z\", \"duration\": \"0:00:30\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 0.001, \"param_--max_iter\": 100, \"param_--solver\": \"lbfgs\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_9\", \"run_number\": 77, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:36:04.245911Z\", \"end_time\": \"2021-10-24T22:37:02.780161Z\", \"created_time\": \"2021-10-24T22:35:57.898707Z\", \"created_time_dt\": \"2021-10-24T22:35:57.898707Z\", \"duration\": \"0:01:04\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 0.0001, \"param_--max_iter\": 200, \"param_--solver\": \"newton-cg\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_10\", \"run_number\": 78, \"metric\": null, \"status\": \"Failed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:36:07.167375Z\", \"end_time\": \"2021-10-24T22:36:31.219838Z\", \"created_time\": \"2021-10-24T22:35:57.965921Z\", \"created_time_dt\": \"2021-10-24T22:35:57.965921Z\", \"duration\": \"0:00:33\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 0.01, \"param_--max_iter\": 300, \"param_--solver\": \"liblinear\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_12\", \"run_number\": 79, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:36:37.626724Z\", \"end_time\": \"2021-10-24T22:37:02.906538Z\", \"created_time\": \"2021-10-24T22:36:28.645283Z\", \"created_time_dt\": \"2021-10-24T22:36:28.645283Z\", \"duration\": \"0:00:34\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 0.0001, \"param_--max_iter\": 100, \"param_--solver\": \"liblinear\"}, {\"run_id\": \"HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_11\", \"run_number\": 80, \"metric\": null, \"status\": \"Canceled\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2021-10-24T22:36:37.487851Z\", \"end_time\": \"2021-10-24T22:37:02.878111Z\", \"created_time\": \"2021-10-24T22:36:28.659557Z\", \"created_time_dt\": \"2021-10-24T22:36:28.659557Z\", \"duration\": \"0:00:34\", \"hyperdrive_id\": \"e277c0b1-c594-4385-b6be-2ac1cfa1f65e\", \"arguments\": null, \"param_--C\": 0.1, \"param_--max_iter\": 400, \"param_--solver\": \"lbfgs\"}], \"children_metrics\": {\"categories\": null, \"series\": null, \"metricName\": null}, \"run_metrics\": [], \"run_logs\": \"[2021-10-24T22:28:50.950119][API][INFO]Experiment created\\r\\n[2021-10-24T22:28:51.477727][GENERATOR][INFO]Trying to sample '4' jobs from the hyperparameter space\\r\\n[2021-10-24T22:28:51.656558][GENERATOR][INFO]Successfully sampled '4' jobs, they will soon be submitted to the execution target.\\r\\n[2021-10-24T22:29:21.2780543Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_0'\\r\\n[2021-10-24T22:29:21.2794414Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_1'\\r\\n[2021-10-24T22:29:21.3021993Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_3'\\r\\n[2021-10-24T22:29:21.2807764Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_2'\\r\\n[2021-10-24T22:29:21.7500410Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_0'\\r\\n[2021-10-24T22:29:21.8118646Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_2'\\r\\n[2021-10-24T22:29:21.9390426Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_3'\\r\\n[2021-10-24T22:29:21.8554937Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_1'\\r\\n[2021-10-24T22:32:50.690053][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_1, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_2, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_3] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-10-24T22:33:20.643587][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_0, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_1, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_2, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_3] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-10-24T22:33:50.686429][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_0] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-10-24T22:34:05.720256][GENERATOR][INFO]Trying to sample '3' jobs from the hyperparameter space\\r\\n[2021-10-24T22:34:06.006207][GENERATOR][INFO]Successfully sampled '3' jobs, they will soon be submitted to the execution target.\\r\\n[2021-10-24T22:34:20.793064][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_0] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-10-24T22:34:24.5267165Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_4'\\r\\n[2021-10-24T22:34:24.5296923Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_6'\\r\\n[2021-10-24T22:34:24.5282810Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_5'\\r\\n[2021-10-24T22:34:25.0987548Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_5'\\r\\n[2021-10-24T22:34:25.1110103Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_6'\\r\\n[2021-10-24T22:34:25.4735386Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_4'\\r\\n[2021-10-24T22:34:50.755717][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_0, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_4, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_5, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_6] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-10-24T22:35:05.668051][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\\r\\n[2021-10-24T22:35:05.814367][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\\r\\n[2021-10-24T22:35:25.9473881Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_8'\\r\\n[2021-10-24T22:35:25.9460780Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_7'\\r\\n[2021-10-24T22:35:26.7265812Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_8'\\r\\n[2021-10-24T22:35:27.3740545Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_7'\\r\\n[2021-10-24T22:35:35.614064][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\\r\\n[2021-10-24T22:35:35.771796][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\\r\\n[2021-10-24T22:35:50.777412][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_7, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_8] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-10-24T22:35:57.5505070Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_9'\\r\\n[2021-10-24T22:35:57.5519186Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_10'\\r\\n[2021-10-24T22:35:57.9761197Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_9'\\r\\n[2021-10-24T22:35:58.0431628Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_10'\\r\\n[2021-10-24T22:36:05.736649][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\\r\\n[2021-10-24T22:36:05.977556][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\\r\\n[2021-10-24T22:36:20.846638][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_9, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_10] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-10-24T22:36:28.2910977Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_11'\\r\\n[2021-10-24T22:36:28.2930509Z][SCHEDULER][INFO]Scheduling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_12'\\r\\n[2021-10-24T22:36:28.7175097Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_12'\\r\\n[2021-10-24T22:36:28.7321899Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_11'\\r\\n[2021-10-24T22:36:35.634749][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\r\\n[2021-10-24T22:36:35.810000][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\r\\n[2021-10-24T22:36:40.815741][CONTROLLER][INFO]Experiment has been marked for cancellation.\\r\\n[2021-10-24T22:36:40.815800][CONTROLLER][WARNING]The first 3 jobs have failed. The system is canceling the experiment. Please resolve the issues before resubmitting the experiment.\\r\\n[2021-10-24T22:36:51.173498][ENFORCER][INFO]Jobs [https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_9, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_11, https://southcentralus.experiments.azureml.net/subscriptions/9e65f93e-bdd8-437b-b1e8-0647cd6098f7/resourceGroups/aml-quickstarts-161907/providers/Microsoft.MachineLearningServices/workspaces/quick-starts-ws-161907/experiments/**SCRUBBED**/runs/HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_12] do not contain any metrics with the primary metric name at this moment, policy cannot be applied.\\r\\n[2021-10-24T22:37:01.9194634Z][SCHEDULER][INFO]Cancelling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_11'\\r\\n[2021-10-24T22:37:01.9184700Z][SCHEDULER][INFO]Cancelling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_9'\\r\\n[2021-10-24T22:37:01.9205806Z][SCHEDULER][INFO]Cancelling job, id='HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_12'\\r\\n[2021-10-24T22:37:02.7139510Z][SCHEDULER][INFO]Updating job statuses to cancelled: [(job id = 'HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_9', previous status = 'RUNNING'), (job id = 'HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_11', previous status = 'RUNNING'), (job id = 'HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_12', previous status = 'RUNNING'), (job id = 'HD_e277c0b1-c594-4385-b6be-2ac1cfa1f65e_13', previous status = 'QUEUED')]\\n\", \"graph\": {}, \"widget_settings\": {\"childWidgetDisplay\": \"popup\", \"send_telemetry\": false, \"log_level\": \"INFO\", \"sdk_version\": \"1.34.0\"}, \"loading\": false}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 6,
      "metadata": {
        "gather": {
          "logged": 1635113477565
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "assert(hyperdrive_run.get_status() == 'Completed')"
      ],
      "outputs": [
        {
          "output_type": "error",
          "ename": "AssertionError",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAssertionError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-14-050e6be40acb>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32massert\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhyperdrive_run\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'Completed'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mAssertionError\u001b[0m: "
          ]
        }
      ],
      "execution_count": 14,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Best Model\n",
        "\n",
        "TODO: In the cell below, get the best model from the hyperdrive experiments and display all the properties of the model."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "import joblib\n",
        "# Get your best run and save the model from that run.\n",
        "best_run = hyperdrive_run.get_best_run_by_primary_metric()\n",
        "best_run_metrics = best_run.get_metrics()\n",
        "parameter_values = best_run.get_details()['runDefinition']['arguments']\n",
        "\n",
        "print('Best parameters: ', parameter_values)\n",
        "print('Best Run Id: ', best_run.id)\n",
        "print('\\n Accuracy:', best_run_metrics['Accuracy'])\n"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "gather": {
          "logged": 1598546650307
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#TODO: Save the best model\n",
        "\n",
        "best_model = best_run.register_model(model_name='udacity_project_model', model_path='./')"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "gather": {
          "logged": 1598546657829
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Model Deployment\n",
        "\n",
        "Remember you have to deploy only one of the two models you trained.. Perform the steps in the rest of this notebook only if you wish to deploy this model.\n",
        "\n",
        "TODO: In the cell below, register the model, create an inference config and deploy the model as a web service."
      ],
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, send a request to the web service you deployed to test it."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, print the logs of the web service and delete the service"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    }
  ],
  "metadata": {
    "kernel_info": {
      "name": "python3"
    },
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.9",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    },
    "microsoft": {
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}